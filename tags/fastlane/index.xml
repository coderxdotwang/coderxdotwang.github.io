<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>fastlane on 编程蚂蚁</title><link>https://coderx.wang/tags/fastlane/</link><description>Recent content in fastlane on 编程蚂蚁</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 07 Jul 2019 23:19:10 +0000</lastBuildDate><atom:link href="https://coderx.wang/tags/fastlane/index.xml" rel="self" type="application/rss+xml"/><item><title>iOS 打包发布自动化实践：fastlane</title><link>https://coderx.wang/posts/ios-%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E8%B7%B5fastlane/</link><pubDate>Sun, 07 Jul 2019 23:19:10 +0000</pubDate><guid>https://coderx.wang/posts/ios-%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E8%B7%B5fastlane/</guid><description>结合近期团队打包发布过程较耗时，影响开发效率问题，最近体验实践了一遍自动打包工具 fastlane，记录一下基本过程及碰到的问题。（纯记录贴，没有实践过的可以看看碰到的问题部分，有经验的前辈可以瞅一眼疑问部分指点一下：）
安装及初始化 按文档，在终端中依次运行以下命令：
安装最新版本的 Xcode 命令行工具
xcode-select &amp;ndash;install
安装 fastlane
# 使用 RubyGems sudo gem install fastlane -NV # 或者使用 Homebrew brew cask install fastlane
导航至项目目录并运行
fastlane init
成功后输出：
查看项目目录可以看到如终端数据的提示，生成了 fastlane 目录，包含两个文件：Fastfile、Appfile。以及 Gemfile 和 Gemfile.lock。
配置 主要为配置 Appfile 及 Fastfile。
Appfile 主要为配置一些通用信息，例如 app_identifier（Bundle Identifier）、apple_id（Apple ID）。如果不配置，在执行命令时需要相关信息终端会提示并等待用户输入。如果开发者账号归属于多个 team，需要指定 team_name 及 team_id，如果需要上传到 App Store Connect，需要配置 itc_team_name 及 itc_team_id。还可以为不同的 lane（一个 lane 即为一个打包动作命令集合）复写为不同的值，例如针对测试版本与生产版本做不同配置。</description></item></channel></rss>